import { GetStaticPaths, GetStaticProps } from "next";
import { prisma } from "../../server/db/client";
import { ParsedUrlQuery } from "querystring";
import Head from "next/head";
import Nav from "../components/Nav";

interface IParams extends ParsedUrlQuery {
  id: string;
}

type Post = {
  body: string;
  author: string;
  id: string;
  title: string;
};

type PostProps = {
  post: Post;
};

export async function getStaticPaths() {
  const postTitle = [];
  const users = await prisma.post.findMany();
  const paths = users.map((user) => {
    return {
      params: { id: user.title.replace(" ", "") },
    };
  });
  return {
    paths,
    fallback: false,
  };
}

type Props = {
  post: Post;
};

interface Params extends ParsedUrlQuery {
  slug: string;
}

export async function getStaticProps(context: any) {
  const { id } = context.params as Params;
  const response = await prisma.post.findFirst({
    where: { title: id as string },
  });
  if (!response) return;

  return {
    props: {
      post: {
        body: response.body,
        title: response.title,
        id: response.id,
        author: response.author,
      },
    },
  };
}

export default function posts({ post }: PostProps) {
  if (!post) return;

  return (
    <section>
      <Head>
        <title>{post.title}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav />

      <main className="flex h-screen justify-center items-center">
        <div className="flex flex-col justify-center items-center shadow-2xl p-5 rounded-2xl">
          <h2 className="text-2xl text-cyan-600  ">{post.author}</h2>
          <h1 className="text-4xl">{post.title}</h1>
          <p className="text-lg">{post.body}</p>
        </div>
      </main>
    </section>
  );
}
