type Props = {};
import { trpc } from "../utils/trpc";
import { useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import { useAppContext } from "./context/state";

type loginArgs = {
  e: React.MouseEvent<Element, globalThis.MouseEvent>;
  email: string;
  password: string;
};

const login = (props: Props) => {
  const [email, setEmail] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [loginError, setLoginError] = useState<string | null>(null);
  const loginMutation = trpc.useMutation(["UserRouter.login-user"]);
  const { login } = useAppContext();
  const router = useRouter();

  const handleLogin = ({ e, password, email }: loginArgs) => {
    e.preventDefault();
    loginMutation.mutate({ email, password });

    if (loginMutation.data == undefined) {
      console.error("No Data Was Recieved");
      setLoginError("No Data Found");
      return;
    }

    if (loginMutation.data.error !== null) {
      console.error(loginMutation.data.error);
      setLoginError(loginMutation.data.error);
      return;
    }

    login({
      email,
      username: loginMutation.data.username,
      fullName: loginMutation.data.fullName,
      token: loginMutation.data.token,
    });
    router.push("/posts");
  };

  return (
    <section>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex justify-center items-center h-screen">
        <form className="flex flex-col justify-center items-center p-20 border rounded-xl gap-3 shadow-lg">
          <h1 className="text-2xl">Login</h1>
          <input
            className="border rounded-3xl p-3"
            type="email"
            placeholder="Email"
            onChange={(e) => setEmail(e.target.value)}
          />
          <input
            className="border rounded-3xl p-3"
            type="password"
            placeholder="Password"
            onChange={(e) => setPassword(e.target.value)}
          />
          {loginError && (
            <>
              <div className="flex justify-center items-center bg-red-400 p-1 rounded-3xl w-full">
                <p className=" text-teal-50">{loginError}</p>
              </div>
            </>
          )}
          <button
            onClick={(e) => handleLogin({ e, password, email })}
            className="btn mt-2"
          >
            Login
          </button>
          <a href="/register" className=" text-cyan-600">
            Dont Have an account?
          </a>
        </form>
      </div>
    </section>
  );
};

export default login;
